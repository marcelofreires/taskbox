{"version":3,"sources":["components/Task.tsx","components/LoadingRow.js","components/PureTaskList.tsx","storybook/index.js","App.tsx","constants/globalStyles.js","storybook/rn-addons.js","components/PureTaskList.stories.js","components/Task.stories.js"],"names":["Task","task","id","title","state","onArchiveTask","onPinTask","style","styles","ListItem","onPress","CheckBox","name","size","color","placeholder","ListItemInputTaskArchived","ListItemInputTask","value","editable","GlowView","props","useState","Animated","Value","glowAnim","useEffect","loop","sequence","timing","toValue","duration","easing","Easing","inOut","quad","start","View","opacity","children","LoadingRow","LoadingItem","GlowCheckbox","Text","GlowText","PureTaskList","loading","tasks","events","SafeAreaView","ListItems","length","WrapperMessage","AntDesign","TitleMessage","SubtitleMessage","tasksInOrder","filter","FlatList","data","keyExtractor","renderItem","item","key","configure","require","module","StorybookUIRoot","getStorybookUI","asyncStorage","StyleSheet","create","container","flex","backgroundColor","width","TaskBox","fontSize","padding","borderColor","borderStyle","borderWidth","borderRadius","height","marginLeft","flexDirection","flexWrap","paddingHorizontal","alignItems","justifyContent","paddingLeft","paddingBottom","lineHeight","fontStyle","minHeight","flexGrow","textAlign","PageListsShow","PageListsShowhead","paddingTop","paddingRight","fontWeight","titlepage","TitleWrapper","maxWidth","defaultTasks","withPinnedTasks","slice","storiesOf","addDecorator","story","add","actions","updatedAt","Date","action"],"mappings":"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","file":"static/js/app.fa37597f.chunk.js","sourcesContent":["import * as React from 'react';\nimport { TextInput, SafeAreaView, View, TouchableOpacity } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\n\nimport { styles } from '../constants/globalStyles';\n\nexport interface TaskProps {\n  id: string\n  title: string\n  state: string\n}\n\nexport interface TaskStoryProps {\n  task: TaskProps\n  onArchiveTask: (id: string) => void\n  onPinTask: (id: string) => void\n}\n\nconst Task = ({\n  task: {\n    id,\n    title,\n    state,\n  },\n  onArchiveTask,\n  onPinTask,\n}: TaskStoryProps) => (\n  <SafeAreaView style={styles.ListItem}>\n    <TouchableOpacity onPress={() => onArchiveTask(id)}>\n      {state !== 'TASK_ARCHIVED' ? (\n        <View style={styles.CheckBox} />\n      ) : (\n        <AntDesign name=\"checksquareo\" size={20} color=\"#2cc5d2\" />\n      )}\n    </TouchableOpacity>\n    <TextInput\n      placeholder=\"Input Title\"\n      style={\n        (state === 'TASK_ARCHIVED')\n          ? styles.ListItemInputTaskArchived\n          : styles.ListItemInputTask\n      }\n      value={title}\n      editable={false}\n    />\n    <TouchableOpacity onPress={() => onPinTask(id)}>\n      <AntDesign\n        name=\"star\"\n        size={20}\n        color={state !== 'TASK_PINNED' ? '#eee' : '#26c6da'}\n      />\n    </TouchableOpacity>\n  </SafeAreaView>\n);\n\nexport default Task\n","import React, { useState, useEffect } from 'react';\nimport { Animated, Text, View, Easing, SafeAreaView } from 'react-native';\n\nimport { styles } from '../constants/globalStyles';\n\nconst GlowView = props => {\n  const [glowAnim] = useState(new Animated.Value(0.4));\n\n  useEffect(() => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(glowAnim, {\n          toValue: 1,\n          duration: 1300,\n          easing: Easing.inOut(Easing.quad),\n        }),\n        Animated.timing(glowAnim, {\n          toValue: 0.4,\n        })\n      ])\n    ).start();\n  }, []);\n\n  return (\n    <Animated.View\n      style={{\n        ...props.style,\n        opacity: glowAnim,\n      }}\n    >\n      {props.children}\n    </Animated.View>\n  );\n};\n\nconst LoadingRow = () => (\n  <GlowView>\n    <View style={styles.LoadingItem}>\n      <View style={styles.GlowCheckbox} />\n      <Text style={styles.GlowText}>Loading text example</Text>\n    </View>\n  </GlowView>\n);\n\nexport default LoadingRow;\n","import * as React from 'react';\nimport { FlatList, Text, SafeAreaView, View } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\n\nimport Task, { TaskProps } from './Task';\nimport LoadingRow from './LoadingRow';\nimport { styles } from '../constants/globalStyles';\n\nexport interface PureTaskListProps {\n  loading?: boolean\n  tasks: TaskProps[]\n  onPinTask: () => void\n  onArchiveTask: () => void\n}\n\nconst PureTaskList = ({\n  loading,\n  tasks,\n  onPinTask,\n  onArchiveTask,\n}: PureTaskListProps) => {\n  const events = {\n    onPinTask,\n    onArchiveTask,\n  };\n\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.ListItems}>\n        <LoadingRow />\n        <LoadingRow />\n        <LoadingRow />\n        <LoadingRow />\n        <LoadingRow />\n        <LoadingRow />\n      </SafeAreaView>\n    );\n  }\n\n  if (tasks.length === 0) {\n    return (\n      <SafeAreaView style={styles.ListItems}>\n        <View style={styles.WrapperMessage}>\n          <AntDesign name=\"checksquareo\" size={64} color=\"#2cc5d2\" />\n          <Text style={styles.TitleMessage}>You have no tasks</Text>\n          <Text style={styles.SubtitleMessage}>Sit back and relax</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  const tasksInOrder = [\n    ...tasks.filter(task => task.state === 'TASK_PINNED'),\n    ...tasks.filter(task => task.state !== 'TASK_PINNED'),\n  ];\n\n  return (\n    <SafeAreaView style={styles.ListItems}>\n      <FlatList\n        data={tasksInOrder}\n        keyExtractor={task => task.id}\n        renderItem={({ item }) => <Task key={item.id} task={item} {...events} />}\n      />\n    </SafeAreaView>\n  );\n}\n\nexport default PureTaskList;\n","import { getStorybookUI, configure } from '@storybook/react-native';\n\nimport './rn-addons';\n\n// import stories\nconfigure(() => {\n  require('../components/Task.stories.js');\n  require('../components/PureTaskList.stories.js');\n}, module);\n\nconst StorybookUIRoot = getStorybookUI({\n  asyncStorage: null,\n})\n\nexport default StorybookUIRoot;\n","export {default} from './storybook';\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    width: '100%',\n  },\n  TaskBox: {\n    flex: 1,\n    color: '#333',\n    fontSize: 16,\n    backgroundColor: '#26c6da',\n    padding: 16,\n  },\n  CheckBox: {\n    borderColor: '#26c6da',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    borderRadius: 1,\n    backgroundColor: 'transparent',\n    height: 18,\n    width: 18,\n  },\n  GlowCheckbox: {\n    borderColor: '#eee',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    borderRadius: 1,\n    backgroundColor: '#eee',\n    color: 'transparent',\n    height: 20,\n    width: 20,\n  },\n  GlowText: {\n    backgroundColor: '#eee',\n    color: 'transparent',\n    height: 20,\n    marginLeft: 16,\n  },\n  ListItem: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    height: 48,\n    paddingHorizontal: 16,\n    width: '100%',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  ListItemInputTask: {\n    backgroundColor: 'transparent',\n    width: '95%',\n    paddingLeft: 16,\n    paddingBottom: 4,\n    fontSize: 14,\n    lineHeight: 20,\n    fontStyle: 'normal',\n  },\n  ListItemInputTaskArchived: {\n    color: '#aaa',\n    width: '95%',\n    paddingLeft: 16,\n    paddingBottom: 4,\n    fontSize: 14,\n    lineHeight: 20,\n    fontStyle: 'normal',\n  },\n  LoadingItem: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    height: 48,\n    paddingLeft: 16,\n  },\n  ListItems: {\n    flex: 1,\n    backgroundColor: 'white',\n    minHeight: 288,\n  },\n  WrapperMessage: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  PageListsShow: {\n    minHeight: '100vh',\n    backgroundColor: 'white',\n  },\n  PageListsShowhead: {\n    backgroundColor: '#d3edf4',\n    paddingTop: 24,\n    paddingBottom: 24,\n    paddingLeft: 20,\n    paddingRight: 20,\n    textAlign: 'center',\n  },\n  TitleMessage: {\n    fontSize: 16,\n    lineHeight: 24,\n    fontWeight: '800',\n    color: '#555',\n  },\n  SubtitleMessage: {\n    fontSize: 14,\n    lineHeight: 20,\n    color: '#666',\n  },\n  titlepage: {\n    fontSize: 20,\n    lineHeight: 24,\n  },\n  TitleWrapper: {\n    fontWeight: '800',\n    color: '#1c3f53',\n    maxWidth: '100%',\n  },\n});\n","import '@storybook/addon-ondevice-actions/register';\nimport '@storybook/addon-ondevice-knobs/register';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { storiesOf } from '@storybook/react-native';\n\nimport { styles } from '../constants/globalStyles';\nimport { task, actions } from './Task.stories';\nimport PureTaskList from './PureTaskList';\n\nexport const defaultTasks = [\n  { ...task, id: '1', title: 'Task 1' },\n  { ...task, id: '2', title: 'Task 2' },\n  { ...task, id: '3', title: 'Task 3' },\n  { ...task, id: '4', title: 'Task 4' },\n  { ...task, id: '5', title: 'Task 5' },\n  { ...task, id: '6', title: 'Task 6' },\n];\n\nexport const withPinnedTasks = [\n  ...defaultTasks.slice(0, 5),\n  { id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED' },\n];\n\nstoriesOf('PureTaskList', module)\n  .addDecorator(story => <View style={styles.TaskBox}>{story()}</View>)\n  .add('default', () => <PureTaskList tasks={defaultTasks} {...actions} />)\n  .add('withPinnedTasks', () => <PureTaskList tasks={withPinnedTasks} {...actions} />)\n  .add('loading', () => <PureTaskList loading tasks={[]} {...actions} />)\n  .add('empty', () => <PureTaskList tasks={[]} {...actions} />);\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { storiesOf } from '@storybook/react-native';\nimport { action } from '@storybook/addon-actions';\n\nimport { styles } from '../constants/globalStyles';\nimport Task from './Task.tsx';\n\nexport const task = {\n  id: '1',\n  title: 'Test Task',\n  state: 'TASK_INBOX',\n  updatedAt: new Date(2018, 0, 1, 9, 0),\n};\n\nexport const actions = {\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask'),\n};\n\nstoriesOf('Task', module)\n  .addDecorator(story => <View style={styles.TaskBox}>{story()}</View>)\n  .add('default', () => <Task task={task} {...actions} />)\n  .add('pinned', () => <Task task={{ ...task, state: 'TASK_PINNED' }} {...actions} />)\n  .add('archived', () => <Task task={{ ...task, state: 'TASK_ARCHIVED' }} {...actions} />);\n"],"sourceRoot":""}